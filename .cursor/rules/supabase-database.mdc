# Supabase Database Standards

## Database Guidelines

- Use Row Level Security (RLS) policies for all tables
- Implement proper foreign key constraints
- Use database triggers for audit trails
- Follow naming conventions: snake_case for tables/columns
- Use proper indexes for performance

## Database Operations

```typescript
// Use Supabase client with proper typing
const { data, error } = await supabase
  .from("donors")
  .select("*")
  .eq("campaign_id", campaignId)
  .order("created_at", { ascending: false });

if (error) {
  console.error("Database error:", error);
  return null;
}
```

## RLS Policies

- Always implement RLS policies for data access control
- Use user_id or organization_id for row-level filtering
- Test policies thoroughly with different user contexts

## Migrations

- Use Supabase CLI for database migrations
- Include both up and down migrations
- Test migrations in development before production
- Use proper rollback strategies

## Edge Functions

- Use Edge Functions for background jobs
- Implement proper error handling and retries
- Use environment variables for configuration
- Monitor function execution times and costs
  description:
  globs:
  alwaysApply: false

---
