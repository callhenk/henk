-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.accounts (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  name character varying NOT NULL,
  email character varying UNIQUE,
  updated_at timestamp with time zone,
  created_at timestamp with time zone,
  created_by uuid,
  updated_by uuid,
  picture_url character varying,
  public_data jsonb NOT NULL DEFAULT '{}'::jsonb,
  CONSTRAINT accounts_pkey PRIMARY KEY (id),
  CONSTRAINT accounts_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id),
  CONSTRAINT accounts_updated_by_fkey FOREIGN KEY (updated_by) REFERENCES auth.users(id)
);
CREATE TABLE public.agents (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name character varying NOT NULL,
  description text,
  status USER-DEFINED NOT NULL DEFAULT 'active'::agent_status,
  voice_type USER-DEFINED NOT NULL DEFAULT 'ai_generated'::voice_type,
  voice_id character varying,
  speaking_tone character varying NOT NULL DEFAULT 'Professional'::character varying,
  organization_info text,
  donor_context text,
  faqs jsonb DEFAULT '[]'::jsonb,
  knowledge_base jsonb DEFAULT '{}'::jsonb,
  workflow_config jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  created_by uuid,
  updated_by uuid,
  business_id uuid NOT NULL,
  voice_settings jsonb DEFAULT '{"stability": 0.5, "similarity_boost": 0.75}'::jsonb,
  personality text,
  script_template text,
  CONSTRAINT agents_pkey PRIMARY KEY (id),
  CONSTRAINT agents_business_id_fkey FOREIGN KEY (business_id) REFERENCES public.businesses(id),
  CONSTRAINT agents_updated_by_fkey FOREIGN KEY (updated_by) REFERENCES auth.users(id),
  CONSTRAINT agents_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id)
);
CREATE TABLE public.audio_generations (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  campaign_id uuid,
  agent_id uuid,
  lead_id uuid,
  text_content text NOT NULL,
  voice_id character varying NOT NULL,
  voice_settings jsonb DEFAULT '{}'::jsonb,
  status USER-DEFINED NOT NULL DEFAULT 'pending'::audio_generation_status,
  audio_url text,
  file_size_bytes bigint,
  duration_seconds numeric,
  elevenlabs_request_id character varying,
  elevenlabs_voice_name character varying,
  model_id character varying DEFAULT 'eleven_multilingual_v2'::character varying,
  generation_time_ms integer,
  cost_cents integer,
  cache_hit boolean DEFAULT false,
  cache_key character varying,
  error_code character varying,
  error_message text,
  retry_count integer DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  created_by uuid,
  CONSTRAINT audio_generations_pkey PRIMARY KEY (id),
  CONSTRAINT audio_generations_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id),
  CONSTRAINT audio_generations_lead_id_fkey FOREIGN KEY (lead_id) REFERENCES public.leads(id),
  CONSTRAINT audio_generations_agent_id_fkey FOREIGN KEY (agent_id) REFERENCES public.agents(id),
  CONSTRAINT audio_generations_campaign_id_fkey FOREIGN KEY (campaign_id) REFERENCES public.campaigns(id)
);
CREATE TABLE public.businesses (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name character varying NOT NULL,
  description text,
  status USER-DEFINED NOT NULL DEFAULT 'active'::business_status,
  account_id uuid NOT NULL,
  industry character varying,
  website character varying,
  phone character varying,
  address text,
  logo_url text,
  settings jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  created_by uuid,
  updated_by uuid,
  CONSTRAINT businesses_pkey PRIMARY KEY (id),
  CONSTRAINT businesses_updated_by_fkey FOREIGN KEY (updated_by) REFERENCES auth.users(id),
  CONSTRAINT businesses_account_id_fkey FOREIGN KEY (account_id) REFERENCES public.accounts(id),
  CONSTRAINT businesses_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id)
);
CREATE TABLE public.call_attempts (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  campaign_id uuid NOT NULL,
  lead_id uuid NOT NULL,
  call_log_id uuid,
  attempt_number integer NOT NULL,
  result USER-DEFINED,
  scheduled_at timestamp with time zone NOT NULL,
  attempted_at timestamp with time zone,
  next_attempt_at timestamp with time zone,
  retry_reason character varying,
  retry_delay_minutes integer,
  phone_number character varying NOT NULL,
  audio_generation_id uuid,
  error_code character varying,
  error_message text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT call_attempts_pkey PRIMARY KEY (id),
  CONSTRAINT call_attempts_campaign_id_fkey FOREIGN KEY (campaign_id) REFERENCES public.campaigns(id),
  CONSTRAINT call_attempts_call_log_id_fkey FOREIGN KEY (call_log_id) REFERENCES public.call_logs(id),
  CONSTRAINT call_attempts_lead_id_fkey FOREIGN KEY (lead_id) REFERENCES public.leads(id),
  CONSTRAINT call_attempts_audio_generation_id_fkey FOREIGN KEY (audio_generation_id) REFERENCES public.audio_generations(id)
);
CREATE TABLE public.call_logs (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  campaign_id uuid NOT NULL,
  agent_id uuid NOT NULL,
  lead_id uuid NOT NULL,
  conversation_id uuid,
  call_sid character varying UNIQUE,
  parent_call_sid character varying,
  from_number character varying NOT NULL,
  to_number character varying NOT NULL,
  status USER-DEFINED NOT NULL DEFAULT 'queued'::call_status,
  outcome USER-DEFINED,
  direction character varying NOT NULL DEFAULT 'outbound'::character varying,
  queued_at timestamp with time zone DEFAULT now(),
  initiated_at timestamp with time zone,
  answered_at timestamp with time zone,
  ended_at timestamp with time zone,
  duration_seconds integer,
  ring_duration_seconds integer,
  audio_url text,
  recording_url text,
  recording_duration_seconds integer,
  machine_detection_result character varying,
  sentiment_score numeric,
  quality_score integer,
  call_cost numeric,
  pledged_amount numeric,
  donated_amount numeric,
  error_code character varying,
  error_message text,
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  created_by uuid,
  CONSTRAINT call_logs_pkey PRIMARY KEY (id),
  CONSTRAINT call_logs_agent_id_fkey FOREIGN KEY (agent_id) REFERENCES public.agents(id),
  CONSTRAINT call_logs_lead_id_fkey FOREIGN KEY (lead_id) REFERENCES public.leads(id),
  CONSTRAINT call_logs_conversation_id_fkey FOREIGN KEY (conversation_id) REFERENCES public.conversations(id),
  CONSTRAINT call_logs_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id),
  CONSTRAINT call_logs_campaign_id_fkey FOREIGN KEY (campaign_id) REFERENCES public.campaigns(id)
);
CREATE TABLE public.campaign_executions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  campaign_id uuid NOT NULL,
  status USER-DEFINED NOT NULL DEFAULT 'pending'::campaign_execution_status,
  execution_node character varying,
  process_id character varying,
  total_leads integer NOT NULL DEFAULT 0,
  leads_processed integer NOT NULL DEFAULT 0,
  leads_queued integer NOT NULL DEFAULT 0,
  calls_made integer NOT NULL DEFAULT 0,
  calls_successful integer NOT NULL DEFAULT 0,
  calls_failed integer NOT NULL DEFAULT 0,
  started_at timestamp with time zone,
  paused_at timestamp with time zone,
  resumed_at timestamp with time zone,
  completed_at timestamp with time zone,
  estimated_completion_at timestamp with time zone,
  calls_today integer NOT NULL DEFAULT 0,
  calls_this_hour integer NOT NULL DEFAULT 0,
  audio_generations_today integer NOT NULL DEFAULT 0,
  average_call_duration_seconds numeric,
  success_rate_percentage numeric,
  current_throughput_calls_per_hour numeric,
  config_snapshot jsonb NOT NULL DEFAULT '{}'::jsonb,
  last_error text,
  error_count integer NOT NULL DEFAULT 0,
  retry_count integer NOT NULL DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  created_by uuid,
  CONSTRAINT campaign_executions_pkey PRIMARY KEY (id),
  CONSTRAINT campaign_executions_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id),
  CONSTRAINT campaign_executions_campaign_id_fkey FOREIGN KEY (campaign_id) REFERENCES public.campaigns(id)
);
CREATE TABLE public.campaign_queue (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  campaign_id uuid NOT NULL,
  lead_id uuid NOT NULL,
  status USER-DEFINED NOT NULL DEFAULT 'pending'::queue_status,
  priority integer NOT NULL DEFAULT 100,
  scheduled_for timestamp with time zone NOT NULL,
  processing_started_at timestamp with time zone,
  processing_node character varying,
  attempt_number integer NOT NULL DEFAULT 1,
  retry_reason character varying,
  requires_audio_generation boolean NOT NULL DEFAULT true,
  audio_generation_id uuid,
  calls_made_today integer NOT NULL DEFAULT 0,
  last_call_at timestamp with time zone,
  error_count integer NOT NULL DEFAULT 0,
  last_error text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT campaign_queue_pkey PRIMARY KEY (id),
  CONSTRAINT campaign_queue_audio_generation_id_fkey FOREIGN KEY (audio_generation_id) REFERENCES public.audio_generations(id),
  CONSTRAINT campaign_queue_lead_id_fkey FOREIGN KEY (lead_id) REFERENCES public.leads(id),
  CONSTRAINT campaign_queue_campaign_id_fkey FOREIGN KEY (campaign_id) REFERENCES public.campaigns(id)
);
CREATE TABLE public.campaigns (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name character varying NOT NULL,
  description text,
  status USER-DEFINED NOT NULL DEFAULT 'draft'::campaign_status,
  agent_id uuid,
  start_date timestamp with time zone,
  end_date timestamp with time zone,
  calling_hours character varying NOT NULL DEFAULT '9:00 AM - 5:00 PM'::character varying,
  max_attempts integer NOT NULL DEFAULT 3,
  daily_call_cap integer NOT NULL DEFAULT 100,
  script text NOT NULL,
  retry_logic text NOT NULL DEFAULT 'Wait 24 hours before retry'::text,
  budget numeric,
  target_amount numeric,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  created_by uuid,
  updated_by uuid,
  business_id uuid NOT NULL,
  CONSTRAINT campaigns_pkey PRIMARY KEY (id),
  CONSTRAINT campaigns_business_id_fkey FOREIGN KEY (business_id) REFERENCES public.businesses(id),
  CONSTRAINT campaigns_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id),
  CONSTRAINT campaigns_agent_id_fkey FOREIGN KEY (agent_id) REFERENCES public.agents(id),
  CONSTRAINT campaigns_updated_by_fkey FOREIGN KEY (updated_by) REFERENCES auth.users(id)
);
CREATE TABLE public.conversation_events (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  conversation_id uuid NOT NULL,
  call_log_id uuid,
  event_type USER-DEFINED NOT NULL,
  sequence_number integer NOT NULL,
  agent_text text,
  user_response text,
  confidence_score numeric,
  audio_url text,
  audio_duration_seconds numeric,
  processing_time_ms integer,
  ai_model_used character varying,
  metadata jsonb DEFAULT '{}'::jsonb,
  started_at timestamp with time zone DEFAULT now(),
  completed_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT conversation_events_pkey PRIMARY KEY (id),
  CONSTRAINT conversation_events_conversation_id_fkey FOREIGN KEY (conversation_id) REFERENCES public.conversations(id),
  CONSTRAINT conversation_events_call_log_id_fkey FOREIGN KEY (call_log_id) REFERENCES public.call_logs(id)
);
CREATE TABLE public.conversations (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  campaign_id uuid NOT NULL,
  agent_id uuid NOT NULL,
  lead_id uuid NOT NULL,
  status USER-DEFINED NOT NULL DEFAULT 'initiated'::conversation_status,
  duration_seconds integer,
  call_sid character varying,
  recording_url text,
  transcript text,
  sentiment_score numeric,
  key_points jsonb DEFAULT '[]'::jsonb,
  outcome text,
  notes text,
  started_at timestamp with time zone DEFAULT now(),
  ended_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  created_by uuid,
  updated_by uuid,
  CONSTRAINT conversations_pkey PRIMARY KEY (id),
  CONSTRAINT conversations_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id),
  CONSTRAINT conversations_updated_by_fkey FOREIGN KEY (updated_by) REFERENCES auth.users(id),
  CONSTRAINT conversations_campaign_id_fkey FOREIGN KEY (campaign_id) REFERENCES public.campaigns(id),
  CONSTRAINT conversations_agent_id_fkey FOREIGN KEY (agent_id) REFERENCES public.agents(id),
  CONSTRAINT conversations_lead_id_fkey FOREIGN KEY (lead_id) REFERENCES public.leads(id)
);
CREATE TABLE public.integrations (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name character varying NOT NULL,
  description text,
  type USER-DEFINED NOT NULL,
  status USER-DEFINED NOT NULL DEFAULT 'inactive'::integration_status,
  config jsonb DEFAULT '{}'::jsonb,
  credentials jsonb DEFAULT '{}'::jsonb,
  last_sync_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  created_by uuid,
  updated_by uuid,
  business_id uuid NOT NULL,
  CONSTRAINT integrations_pkey PRIMARY KEY (id),
  CONSTRAINT integrations_updated_by_fkey FOREIGN KEY (updated_by) REFERENCES auth.users(id),
  CONSTRAINT integrations_business_id_fkey FOREIGN KEY (business_id) REFERENCES public.businesses(id),
  CONSTRAINT integrations_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id)
);
CREATE TABLE public.leads (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  campaign_id uuid NOT NULL,
  name character varying NOT NULL,
  email character varying,
  phone character varying NOT NULL,
  company character varying,
  status USER-DEFINED NOT NULL DEFAULT 'new'::lead_status,
  notes text,
  last_contact_date timestamp with time zone,
  attempts integer NOT NULL DEFAULT 0,
  pledged_amount numeric,
  donated_amount numeric,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  created_by uuid,
  updated_by uuid,
  CONSTRAINT leads_pkey PRIMARY KEY (id),
  CONSTRAINT leads_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id),
  CONSTRAINT leads_campaign_id_fkey FOREIGN KEY (campaign_id) REFERENCES public.campaigns(id),
  CONSTRAINT leads_updated_by_fkey FOREIGN KEY (updated_by) REFERENCES auth.users(id)
);
CREATE TABLE public.performance_metrics (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  metric_name character varying NOT NULL,
  metric_type character varying NOT NULL,
  value numeric NOT NULL,
  unit character varying,
  campaign_id uuid,
  service_name character varying,
  node_id character varying,
  tags jsonb DEFAULT '{}'::jsonb,
  recorded_at timestamp with time zone DEFAULT now(),
  CONSTRAINT performance_metrics_pkey PRIMARY KEY (id),
  CONSTRAINT performance_metrics_campaign_id_fkey FOREIGN KEY (campaign_id) REFERENCES public.campaigns(id)
);
CREATE TABLE public.status_updates (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  update_type USER-DEFINED NOT NULL,
  campaign_id uuid,
  account_id uuid NOT NULL,
  title character varying NOT NULL,
  message text,
  data jsonb DEFAULT '{}'::jsonb,
  websocket_sent boolean NOT NULL DEFAULT false,
  websocket_sent_at timestamp with time zone,
  email_sent boolean NOT NULL DEFAULT false,
  email_sent_at timestamp with time zone,
  priority integer NOT NULL DEFAULT 100,
  expires_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT status_updates_pkey PRIMARY KEY (id),
  CONSTRAINT status_updates_account_id_fkey FOREIGN KEY (account_id) REFERENCES public.accounts(id),
  CONSTRAINT status_updates_campaign_id_fkey FOREIGN KEY (campaign_id) REFERENCES public.campaigns(id)
);
CREATE TABLE public.team_members (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  business_id uuid NOT NULL,
  user_id uuid NOT NULL,
  role USER-DEFINED NOT NULL DEFAULT 'member'::team_role,
  status USER-DEFINED NOT NULL DEFAULT 'invited'::team_member_status,
  permissions jsonb DEFAULT '{}'::jsonb,
  invited_by uuid,
  invited_at timestamp with time zone DEFAULT now(),
  accepted_at timestamp with time zone,
  last_active_at timestamp with time zone,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT team_members_pkey PRIMARY KEY (id),
  CONSTRAINT team_members_business_id_fkey FOREIGN KEY (business_id) REFERENCES public.businesses(id),
  CONSTRAINT team_members_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id),
  CONSTRAINT team_members_invited_by_fkey FOREIGN KEY (invited_by) REFERENCES auth.users(id)
);
CREATE TABLE public.webhook_events (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  event_type USER-DEFINED NOT NULL,
  call_sid character varying,
  account_sid character varying,
  campaign_id uuid,
  call_log_id uuid,
  event_data jsonb NOT NULL DEFAULT '{}'::jsonb,
  raw_payload jsonb NOT NULL DEFAULT '{}'::jsonb,
  processed boolean NOT NULL DEFAULT false,
  processed_at timestamp with time zone,
  processing_error text,
  source_ip character varying,
  user_agent text,
  twilio_signature character varying,
  signature_valid boolean,
  received_at timestamp with time zone DEFAULT now(),
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT webhook_events_pkey PRIMARY KEY (id),
  CONSTRAINT webhook_events_campaign_id_fkey FOREIGN KEY (campaign_id) REFERENCES public.campaigns(id),
  CONSTRAINT webhook_events_call_log_id_fkey FOREIGN KEY (call_log_id) REFERENCES public.call_logs(id)
);
CREATE TABLE public.workflow_edges (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  workflow_id uuid NOT NULL,
  edge_id character varying NOT NULL,
  source_node_id character varying NOT NULL,
  target_node_id character varying NOT NULL,
  source_handle character varying,
  target_handle character varying,
  label character varying,
  condition jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT workflow_edges_pkey PRIMARY KEY (id),
  CONSTRAINT workflow_edges_workflow_id_fkey FOREIGN KEY (workflow_id) REFERENCES public.workflows(id)
);
CREATE TABLE public.workflow_nodes (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  workflow_id uuid NOT NULL,
  node_id character varying NOT NULL,
  type USER-DEFINED NOT NULL,
  position_x integer NOT NULL,
  position_y integer NOT NULL,
  data jsonb NOT NULL DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT workflow_nodes_pkey PRIMARY KEY (id),
  CONSTRAINT workflow_nodes_workflow_id_fkey FOREIGN KEY (workflow_id) REFERENCES public.workflows(id)
);
CREATE TABLE public.workflows (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name character varying NOT NULL,
  description text,
  agent_id uuid NOT NULL,
  status USER-DEFINED NOT NULL DEFAULT 'draft'::workflow_status,
  version integer NOT NULL DEFAULT 1,
  is_default boolean NOT NULL DEFAULT false,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  created_by uuid,
  updated_by uuid,
  CONSTRAINT workflows_pkey PRIMARY KEY (id),
  CONSTRAINT workflows_agent_id_fkey FOREIGN KEY (agent_id) REFERENCES public.agents(id),
  CONSTRAINT workflows_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id),
  CONSTRAINT workflows_updated_by_fkey FOREIGN KEY (updated_by) REFERENCES auth.users(id)
);